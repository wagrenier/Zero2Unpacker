name: Publish New Version

on: 
  workflow_dispatch:
    inputs:
      PatchNotes:
        description: 'Changes since last publish'     
        required: true
        default: 'Added stuff'
      Pre-release:
        description: 'Is this a pre-release'     
        required: true
        default: 'false'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore
   
    - name: Build
      run: dotnet build --no-restore -c Release
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish -c Release -p:PublishSingleFile=true -r win-x64 -o ./app --nologo
        
    # Setups the env vars for gitversion
    - uses: gittools/actions/gitversion/setup@v0.9.7
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      with:
          versionSpec: '5.x.x'
          
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.7
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    
    # Zips the binaries and required files
    - name: Zip App
      run: |
        zip -r zero2unpacker_v${{ steps.gitversion.outputs.majorMinorPatch }}.zip ./app/Zero2Unpacker.exe ./DeLESS.exe ./MFAudio.exe --junk-paths
        
    # Creates a new TAG version
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: "${{ steps.gitversion.outputs.majorMinorPatch }}"
        release_name: Zero2Unpacker Release ${{ steps.gitversion.outputs.majorMinorPatch }}
        body: ${{ github.event.inputs.patchnotes }}
        draft: false
        prerelease: ${{ github.event.inputs.pre-release }}

    # Releases the zipped assets
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./zero2unpacker_v${{ steps.gitversion.outputs.majorMinorPatch }}.zip
        asset_name: zero2unpacker_v${{ steps.gitversion.outputs.majorMinorPatch }}.zip
        asset_content_type: application/zip
